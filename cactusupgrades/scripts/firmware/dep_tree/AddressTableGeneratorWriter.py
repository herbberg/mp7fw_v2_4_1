from __future__ import print_function
import time, os

from SmartOpen import SmartOpen
from DepFileParser import DepFileParser
from CommandLineParser import CommandLineParser
from Pathmaker import Pathmaker

#--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
class AddressTableGeneratorWriter( object ):
  def __init__( self , aCommandLineArgs , aPathmaker ):
    self.CommandLineArgs = aCommandLineArgs
    self.Pathmaker = aPathmaker
 
  def write( self , aScriptVariables , aComponentPaths , aCommandList , aLibs, aMaps ):
    with SmartOpen( self.CommandLineArgs.output ) as write:
      write("# Autogenerated project build script")
      write( time.strftime("# %c") )
      write('''
declare -a UPDATED_DECODERS

function generate_decoder {
    SRC=$1
    DECODER=$2
    TARGET="$3/$2"

    echo "#################################"
    echo "# Processing ${SRC}"
    echo "#################################"
    gen_ipbus_addr_decode ${SRC}
    res=$?
    if [ ${res} -eq 0 ]; then
      echo "Successfully created decoder for ${SRC}"
    else
      echo "Failed to generate decoder. Skipping." >&2
      return 999
    fi
    echo

    echo 'Comparing generated decoder and target'
    echo '----------------------------'
    diff -u -I '^-- START automatically' ${DECODER} ${TARGET}
    res=$?
    echo '----------------------------'

    if [ ${res} -eq 0 ]; then
      echo "No differences detected, ${TARGET} is up-to-date."
    else
      echo "Generated and target file differ. Updating ${TARGET}"
      cp ${DECODER} ${TARGET}
      UPDATED_DECODERS+=(${TARGET})
    fi

    echo
}

function generate_summary {
  echo
  echo "###################################"
  echo "# IPBus decoder generator summary"
  echo "###################################"
  echo
  if [ ${#UPDATED_DECODERS[@]} -eq 0 ]; then
    echo "  No decoders have been updated"
  else
    echo "  The following decoders have been updated"
    echo
    for DECODER in ${UPDATED_DECODERS[@]}
    do
      echo "  * ${DECODER}"
    done
  fi
  echo
}
        ''')
      write( )
      for addrtab in aCommandList['addrtab']:
        if addrtab.TopLevel:
          n = os.path.basename( addrtab.FilePath )
          b = 'ipbus_decode_{0}.vhd'.format( os.path.splitext(n)[0] )
          write('generate_decoder {0} {1} {2}'.format(n, b, self.Pathmaker.getpath( addrtab.ComponentPath, 'src')))
      write( )
      write('generate_summary')
#--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
